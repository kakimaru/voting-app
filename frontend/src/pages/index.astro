---
import BaseLayout from "../layouts/BaseLayout.astro";
import CreatePoll from "../components/CreatePoll.astro";
import ShowAll from "../components/ShowAll.astro";
import Loading from "../components/Loading.astro";

const title = "Home";
---

<BaseLayout title={title}>
  <Loading id="loading" />
  <section>
    <h1 id="pollTitle">Loading...</h1>
    <div>
      <CreatePoll />
      <ShowAll />
    </div>
  </section>
</BaseLayout>

<script is:inline type="module">
  const URL = "http://localhost:3000"

  document.addEventListener("DOMContentLoaded", async () => {
    const loadingElement = document.getElementById("loading");
    const sectionElement = document.querySelector("section");

    function showLoading() {
      loadingElement.style.display = "block";
    }

    function hideLoading() {
      loadingElement.style.display = "none";
    }

    async function checkLoginStatus() {
      try {
        showLoading();

        const res = await fetch(`${URL}/api/users/check-login`, {
          method: "GET",
          credentials: "include",
        });

        if (!res.ok) window.location.href = "/login";
        else throw new Error(`Unexpected response status: ${res.status}`);

        const { isLoggedIn } = await res.json();

        if (!isLoggedIn) {
          window.location.href = "/login";
        }
      } catch (error) {
        console.error("Error checking login status:", error);
      } finally {
        hideLoading();
        sectionElement.style.display = "block";
      }
    }

    checkLoginStatus();
  });

  import { io } from "https://cdn.socket.io/4.8.1/socket.io.esm.min.js";

  const socket = io(URL);

  async function fetchUserData() {
    try {
      const response = await fetch(`${URL}/api/users/profile`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
        credentials: "include",
      });

      if (!response.ok) {
        throw new Error(`Error: ${response.statusText}`);
      }

      const data = await response.json();

      const pollTitle = document.getElementById("pollTitle");
      pollTitle.textContent = `Welcome, ${data.username}!`;

      socket.emit("userConnected", { username: data.username });
    } catch (error) {
      console.error("Error loading user data:", error);
      const pollTitle = document.getElementById("pollTitle");
      pollTitle.textContent = "Error loading user data.";
    }
  }

  fetchUserData();

  socket.on("newUserConnected", (message) => {
    alert(message);
  });

  socket.on("welcome", (message) => {
    alert(message);
  });
</script>

<style>
  section {
    max-width: 1280px;
    width: 100%;
    margin: 0 auto;
    min-height: 100vh;
    padding: 16px;
    display: none;
  }

  #pollTitle {
    font-size: 32px;
    font-weight: bold;
  }
</style>
